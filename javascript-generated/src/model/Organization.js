/**
 * Open Decisions API
 * API for distributing data about decisions and people behind those decisions
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Area', 'model/Membership', 'model/Organization', 'model/Post', 'model/VoteEvent'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Area'), require('./Membership'), require('./Organization'), require('./Post'), require('./VoteEvent'));
  } else {
    // Browser globals (root is window)
    if (!root.PaatosApiClient) {
      root.PaatosApiClient = {};
    }
    root.PaatosApiClient.Organization = factory(root.PaatosApiClient.ApiClient, root.PaatosApiClient.Area, root.PaatosApiClient.Membership, root.PaatosApiClient.Organization, root.PaatosApiClient.Post, root.PaatosApiClient.VoteEvent);
  }
}(this, function(ApiClient, Area, Membership, Organization, Post, VoteEvent) {
  'use strict';




  /**
   * The Organization model module.
   * @module model/Organization
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>Organization</code>.
   * A group with a common purpose or reason for existence that goes beyond the set of people belonging to it
   * @alias module:model/Organization
   * @class
   */
  var exports = function() {
    var _this = this;


















  };

  /**
   * Constructs a <code>Organization</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Organization} obj Optional instance to populate.
   * @return {module:model/Organization} The populated <code>Organization</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('classification')) {
        obj['classification'] = ApiClient.convertToType(data['classification'], 'String');
      }
      if (data.hasOwnProperty('parent_id')) {
        obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'String');
      }
      if (data.hasOwnProperty('parent')) {
        obj['parent'] = Organization.constructFromObject(data['parent']);
      }
      if (data.hasOwnProperty('area')) {
        obj['area'] = Area.constructFromObject(data['area']);
      }
      if (data.hasOwnProperty('abstract')) {
        obj['abstract'] = ApiClient.convertToType(data['abstract'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('founding_date')) {
        obj['founding_date'] = ApiClient.convertToType(data['founding_date'], 'Date');
      }
      if (data.hasOwnProperty('dissolution_date')) {
        obj['dissolution_date'] = ApiClient.convertToType(data['dissolution_date'], 'Date');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ApiClient.convertToType(data['image'], 'String');
      }
      if (data.hasOwnProperty('memberships')) {
        obj['memberships'] = ApiClient.convertToType(data['memberships'], [Membership]);
      }
      if (data.hasOwnProperty('posts')) {
        obj['posts'] = ApiClient.convertToType(data['posts'], [Post]);
      }
      if (data.hasOwnProperty('vote_events')) {
        obj['vote_events'] = ApiClient.convertToType(data['vote_events'], [VoteEvent]);
      }
      if (data.hasOwnProperty('children')) {
        obj['children'] = ApiClient.convertToType(data['children'], [Organization]);
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The organization's unique identifier
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * A primary name, e.g. a legally recognized name
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * An organization category, e.g. committee
   * @member {String} classification
   */
  exports.prototype['classification'] = undefined;
  /**
   * The ID of the organization that contains this organization
   * @member {String} parent_id
   */
  exports.prototype['parent_id'] = undefined;
  /**
   * The organization that contains this organization
   * @member {module:model/Organization} parent
   */
  exports.prototype['parent'] = undefined;
  /**
   * The geographic area to which this organization is related
   * @member {module:model/Area} area
   */
  exports.prototype['area'] = undefined;
  /**
   * A one-line description of an organization
   * @member {String} abstract
   */
  exports.prototype['abstract'] = undefined;
  /**
   * An extended description of an organization
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * A date of founding
   * @member {Date} founding_date
   */
  exports.prototype['founding_date'] = undefined;
  /**
   * A date of dissolution
   * @member {Date} dissolution_date
   */
  exports.prototype['dissolution_date'] = undefined;
  /**
   * A URL of an image
   * @member {String} image
   */
  exports.prototype['image'] = undefined;
  /**
   * The memberships of the members of the organization and of the organization itself
   * @member {Array.<module:model/Membership>} memberships
   */
  exports.prototype['memberships'] = undefined;
  /**
   * Posts within the organization
   * @member {Array.<module:model/Post>} posts
   */
  exports.prototype['posts'] = undefined;
  /**
   * Vote events in which members of the organization are voting
   * @member {Array.<module:model/VoteEvent>} vote_events
   */
  exports.prototype['vote_events'] = undefined;
  /**
   * The sub-organizations of the organization
   * @member {Array.<module:model/Organization>} children
   */
  exports.prototype['children'] = undefined;
  /**
   * The time at which the resource was created
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * The time at which the resource was last modified
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;



  return exports;
}));


