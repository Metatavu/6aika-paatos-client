/**
 * Open Decisions API
 * API for distributing data about decisions and people behind those decisions
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Organization', 'model/Person', 'model/Post'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Organization'), require('./Person'), require('./Post'));
  } else {
    // Browser globals (root is window)
    if (!root.PaatosApiClient) {
      root.PaatosApiClient = {};
    }
    root.PaatosApiClient.Membership = factory(root.PaatosApiClient.ApiClient, root.PaatosApiClient.Organization, root.PaatosApiClient.Person, root.PaatosApiClient.Post);
  }
}(this, function(ApiClient, Organization, Person, Post) {
  'use strict';




  /**
   * The Membership model module.
   * @module model/Membership
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>Membership</code>.
   * A relationship between a member and an organization
   * @alias module:model/Membership
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>Membership</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Membership} obj Optional instance to populate.
   * @return {module:model/Membership} The populated <code>Membership</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('role')) {
        obj['role'] = ApiClient.convertToType(data['role'], 'String');
      }
      if (data.hasOwnProperty('member')) {
        obj['member'] = ApiClient.convertToType(data['member'], Object);
      }
      if (data.hasOwnProperty('person_id')) {
        obj['person_id'] = ApiClient.convertToType(data['person_id'], 'String');
      }
      if (data.hasOwnProperty('person')) {
        obj['person'] = Person.constructFromObject(data['person']);
      }
      if (data.hasOwnProperty('organization')) {
        obj['organization'] = Organization.constructFromObject(data['organization']);
      }
      if (data.hasOwnProperty('post_id')) {
        obj['post_id'] = ApiClient.convertToType(data['post_id'], 'String');
      }
      if (data.hasOwnProperty('post')) {
        obj['post'] = Post.constructFromObject(data['post']);
      }
      if (data.hasOwnProperty('on_behalf_of')) {
        obj['on_behalf_of'] = Organization.constructFromObject(data['on_behalf_of']);
      }
      if (data.hasOwnProperty('start_date')) {
        obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
      }
      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The membership's unique identifier
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * A label describing the membership
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * The role that the member fulfills in the organization
   * @member {String} role
   */
  exports.prototype['role'] = undefined;
  /**
   * The person or organization that is a member of the organization
   * @member {Object} member
   */
  exports.prototype['member'] = undefined;
  /**
   * The ID of the person who is a member of the organization
   * @member {String} person_id
   */
  exports.prototype['person_id'] = undefined;
  /**
   * The person who is a member of the organization
   * @member {module:model/Person} person
   */
  exports.prototype['person'] = undefined;
  /**
   * The organization in which the person or organization is a member
   * @member {module:model/Organization} organization
   */
  exports.prototype['organization'] = undefined;
  /**
   * The ID of the post held by the member in the organization through this membership
   * @member {String} post_id
   */
  exports.prototype['post_id'] = undefined;
  /**
   * The post held by the member in the organization through this membership
   * @member {module:model/Post} post
   */
  exports.prototype['post'] = undefined;
  /**
   * The organization on whose behalf the person is a member of the organization
   * @member {module:model/Organization} on_behalf_of
   */
  exports.prototype['on_behalf_of'] = undefined;
  /**
   * The date on which the relationship began
   * @member {Date} start_date
   */
  exports.prototype['start_date'] = undefined;
  /**
   * The date on which the relationship ended
   * @member {Date} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * The time at which the resource was created
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * The time at which the resource was last modified
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;



  return exports;
}));


