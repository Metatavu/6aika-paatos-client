/**
 * Open Decisions API
 * API for distributing data about decisions and people behind those decisions
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Action', 'model/Event', 'model/Organization', 'model/VoteCount'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Action'), require('./Event'), require('./Organization'), require('./VoteCount'));
  } else {
    // Browser globals (root is window)
    if (!root.6aikaPaatosClient) {
      root.6aikaPaatosClient = {};
    }
    root.6aikaPaatosClient.VoteEvent = factory(root.6aikaPaatosClient.ApiClient, root.6aikaPaatosClient.Action, root.6aikaPaatosClient.Event, root.6aikaPaatosClient.Organization, root.6aikaPaatosClient.VoteCount);
  }
}(this, function(ApiClient, Action, Event, Organization, VoteCount) {
  'use strict';




  /**
   * The VoteEvent model module.
   * @module model/VoteEvent
   * @version 0.0.0
   */

  /**
   * Constructs a new <code>VoteEvent</code>.
   * An event at which people&#39;s votes are recorded
   * @alias module:model/VoteEvent
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>VoteEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VoteEvent} obj Optional instance to populate.
   * @return {module:model/VoteEvent} The populated <code>VoteEvent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('organization')) {
        obj['organization'] = Organization.constructFromObject(data['organization']);
      }
      if (data.hasOwnProperty('legislative_session')) {
        obj['legislative_session'] = Event.constructFromObject(data['legislative_session']);
      }
      if (data.hasOwnProperty('action')) {
        obj['action'] = Action.constructFromObject(data['action']);
      }
      if (data.hasOwnProperty('counts')) {
        obj['counts'] = ApiClient.convertToType(data['counts'], [VoteCount]);
      }
    }
    return obj;
  }

  /**
   * The organization whose members are voting
   * @member {module:model/Organization} organization
   */
  exports.prototype['organization'] = undefined;
  /**
   * IRI reference to the Event (meeting) where this vote took place
   * @member {module:model/Event} legislative_session
   */
  exports.prototype['legislative_session'] = undefined;
  /**
   * The action to which this vote_event applies.
   * @member {module:model/Action} action
   */
  exports.prototype['action'] = undefined;
  /**
   * The number of votes for options
   * @member {Array.<module:model/VoteCount>} counts
   */
  exports.prototype['counts'] = undefined;



  return exports;
}));


