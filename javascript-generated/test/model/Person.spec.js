/**
 * Open Decisions API
 * API for distributing data about decisions and people behind those decisions
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.6aikaPaatosClient);
  }
}(this, function(expect, 6aikaPaatosClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new 6aikaPaatosClient.Person();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Person', function() {
    it('should create an instance of Person', function() {
      // uncomment below and update the code to test Person
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be.a(6aikaPaatosClient.Person);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property familyName (base name: "family_name")', function() {
      // uncomment below and update the code to test the property familyName
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "given_name")', function() {
      // uncomment below and update the code to test the property givenName
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property additionalName (base name: "additional_name")', function() {
      // uncomment below and update the code to test the property additionalName
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property honorificPrefix (base name: "honorific_prefix")', function() {
      // uncomment below and update the code to test the property honorificPrefix
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property honorificSuffix (base name: "honorific_suffix")', function() {
      // uncomment below and update the code to test the property honorificSuffix
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property patronymicName (base name: "patronymic_name")', function() {
      // uncomment below and update the code to test the property patronymicName
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property sortName (base name: "sort_name")', function() {
      // uncomment below and update the code to test the property sortName
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property birthDate (base name: "birth_date")', function() {
      // uncomment below and update the code to test the property birthDate
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property deathDate (base name: "death_date")', function() {
      // uncomment below and update the code to test the property deathDate
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property biography (base name: "biography")', function() {
      // uncomment below and update the code to test the property biography
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property nationalIdentity (base name: "national_identity")', function() {
      // uncomment below and update the code to test the property nationalIdentity
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property memberships (base name: "memberships")', function() {
      // uncomment below and update the code to test the property memberships
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new 6aikaPaatosClient.Person();
      //expect(instance).to.be();
    });

  });

}));
